{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isOdd from '@stdlib/math-base-assert-is-odd';\nimport round from '@stdlib/math-base-special-round';\n\n\n// MAIN //\n\n/**\n* Truncates the middle UTF-16 code units of a string to return a string having a specified length.\n*\n* @param {string} str - input string\n* @param {integer} len - output string length (including sequence)\n* @param {string} seq - custom replacement sequence\n* @returns {string} truncated string\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5, '...' );\n* // returns 'b...p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5, '>>>' );\n* // returns 'b>>>p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 10, '...' );\n* // returns 'beep boop'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 0, '...' );\n* // returns ''\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 2, '...' );\n* // returns '..'\n*/\nfunction truncateMiddle( str, len, seq ) {\n\tvar finalLength;\n\tvar seqLength;\n\tvar strLength;\n\tvar seqStart;\n\tvar seqEnd;\n\n\tseqLength = seq.length;\n\tstrLength = str.length;\n\tif ( len > strLength ) {\n\t\treturn str;\n\t}\n\tfinalLength = len - seqLength;\n\tif ( finalLength < 0 ) {\n\t\treturn seq.slice( 0, len );\n\t}\n\n\tseqStart = round( finalLength / 2 );\n\tseqEnd = ( isOdd( finalLength ) ) ? seqStart-1 : seqStart;\n\tseqEnd = strLength - seqEnd;\n\n\treturn str.substring( 0, seqStart ) + seq + str.substring( seqEnd );\n}\n\n\n// EXPORTS //\n\nexport default truncateMiddle;\n"],"names":["truncateMiddle","str","len","seq","finalLength","seqLength","strLength","seqStart","seqEnd","length","slice","round","isOdd","substring"],"mappings":";;oMA6DA,SAASA,EAAgBC,EAAKC,EAAKC,GAClC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAIJ,OAFAH,EAAYF,EAAIM,OAEXP,GADLI,EAAYL,EAAIQ,QAERR,GAERG,EAAcF,EAAMG,GACD,EACXF,EAAIO,MAAO,EAAGR,IAGtBK,EAAWI,EAAOP,EAAc,GAEhCI,EAASF,GADTE,EAAWI,EAAOR,GAAkBG,EAAS,EAAIA,GAG1CN,EAAIY,UAAW,EAAGN,GAAaJ,EAAMF,EAAIY,UAAWL,GAC5D"}